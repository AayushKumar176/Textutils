{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","onClick","toggleMode","role","htmlFor","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","style","color","heading","value","onChange","event","console","log","target","backgroundColor","rows","disabled","length","newText","toUpperCase","showAlert","toLowerCase","navigator","clipboard","writeText","document","getSelection","removeAllRanges","split","join","filter","element","defaultProps","aboutText","Alert","height","alert","word","lower","charAt","slice","capitalize","msg","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","cls","body","classList","remove","add","components_Alert","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.e143511a.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import {Link} from 'react-router-dom'\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <div>\r\n      <nav className={`navbar navbar-expand-lg -${props.mode} bg-${props.mode}`}>\r\n  <div className=\"container-fluid\">\r\n    {/* <Link className= {`navbar-brand text-${props.mode==='dark'?'white':'dark'}`} to=\"/\">{props.title}</Link> */}\r\n    <a className= {`navbar-brand text-${props.mode==='dark'?'white':'dark'}`} href=\"#\">{props.title}</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          {/* <Link className={`nav-link active text- text-${props.mode==='dark'?'white':'dark'}`} aria-current=\"page\" to=\"/\">Home</Link> */}\r\n          <a className={`nav-link active text- text-${props.mode==='dark'?'white':'dark'}`} aria-current=\"page\" href=\"#\">Home</a>\r\n        </li>\r\n        {/* <li className=\"nav-item\">\r\n          <Link className={`nav-link  text-${props.mode==='dark'?'white':'dark'}`} to=\"/about\">{props.aboutText}</Link>\r\n        </li> */}\r\n        </ul>\r\n        {/* <div className=\"d-flex\">\r\n          <div className=\"bg-primary rounded mx-2\" onClick={()=>{props.toggleMode('primary')}} style={{height:'30px', width:'30px', cursor:'pointer'}}></div>\r\n          <div className=\"bg-danger rounded mx-2\" onClick={()=>{props.toggleMode('danger')}} style={{height:'30px', width:'30px', cursor:'pointer'}}></div>\r\n          <div className=\"bg-success rounded mx-2\" onClick={()=>{props.toggleMode('Success')}} style={{height:'30px', width:'30px', cursor:'pointer'}}></div>\r\n          <div className=\"bg-warning rounded mx-2\" onClick={()=>{props.toggleMode('warning')}} style={{height:'30px', width:'30px', cursor:'pointer'}}></div>\r\n          <div className=\"bg-light rounded mx-2\" onClick={()=>{props.toggleMode('light')}} style={{height:'30px', width:'30px', cursor:'pointer'}}></div>\r\n          <div className=\"bg-dark rounded mx-2\" onClick={()=>{props.toggleMode('dark')}} style={{height:'30px', width:'30px', cursor:'pointer'}}></div>\r\n        </div> */}\r\n     \r\n      <div className={`form-check form-switch text-${props.mode==='dark'?'white':'dark'}`}>\r\n    \r\n  <input className=\"form-check-input\" onClick={()=>{props.toggleMode('null')}} type=\"checkbox\" role=\"switch\" \r\n \r\n  id=\"flexSwitchCheckDefault\"/>\r\n  \r\n  <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Toggle mode</label>\r\n</div>\r\n    </div>\r\n  </div>\r\n</nav>\r\n    </div>\r\n  )\r\n}\r\n\r\nNavbar.propTypes = {title: PropTypes.string.isRequired,\r\n                aboutText: PropTypes.string.isRequired}\r\n\r\nNavbar.defaultProps ={\r\n    title: 'set title here',\r\n    aboutText:'About text here'\r\n\r\n\r\n}                \r\n\r\n","import React ,{useState} from 'react'\r\nexport default function TextForm(props) {\r\n    const handleUpClick=()=>{\r\n        console.log(\"Upper case was clicked\"  + text );\r\n        let newText=text.toUpperCase();\r\n        setText(newText)\r\n        props.showAlert(\"Converted to upper case \",\"success\")\r\n    }\r\n    const handleLowClick=()=>{\r\n        console.log(\"Lower case was clicked\"  + text );\r\n        let newText=text.toLowerCase();\r\n        setText(newText)\r\n        props.showAlert(\"Converted to Lower case \",\"success\")\r\n\r\n    }\r\n    const handleClearClick=()=>{\r\n        console.log(\"Clear case was clicked\"  + text )\r\n        let newText='';\r\n        setText(newText)\r\n        props.showAlert(\"Text Cleared \",\"success\")\r\n    }\r\n    const handleOnchange=(event)=>{\r\n       console.log(\"on Change\");\r\n       setText(event.target.value)\r\n    }\r\n    const handleCopy=()=>{\r\n      console.log(\"Text copy was clicked\");\r\n      // var text=document.getElementById(\"myBox\")\r\n      // text.select()\r\n      navigator.clipboard.writeText(text)\r\n      document.getSelection().removeAllRanges();\r\n      props.showAlert(\"Copied to Clipboard \",\"success\");\r\n    }\r\n    const handleExtraSpaces=()=>{\r\n       console.log(\"Extra Spaces was clicked\");\r\n       let newText=text.split(/[ ]+/);\r\n       setText(newText.join(\" \"))\r\n       props.showAlert(\"Extra spaces are removed \",\"success\");\r\n    }\r\n    const [text, setText] = useState('');\r\n  return (\r\n    <>\r\n    <div className= \"container \" style={{color : props.mode==='dark'?'white':'black'}}>\r\n        <h1 className=\"mb-3\">{props.heading}</h1>\r\n    \r\n  <div className=\"mb-3\">\r\n   \r\n   <textarea className=\"form-control\" value={text} onChange={handleOnchange} style={{backgroundColor :props.mode==='dark'?'#13466e':'white' ,color:props.mode==='dark'?'white':'black'}} id=\"myBox\" rows=\"9\"></textarea>\r\n  </div>\r\n   <button disabled={text.length===0} className=\"btn btn-primary mx-2 my-1\" onClick={handleUpClick}>Convert to upperCase</button>\r\n   <button disabled={text.length===0} className=\"btn btn-primary mx-2 my-1\" onClick={handleLowClick}>Convert to LowerCase</button>\r\n   <button disabled={text.length===0} className=\"btn btn-primary mx-2 my-1\" onClick={handleClearClick}>Clear Text</button>\r\n   <button disabled={text.length===0} className=\"btn btn-primary mx-2 my-1\" onClick={handleCopy}>Copy Text</button>\r\n   <button disabled={text.length===0} className=\"btn btn-primary mx-2 my-1\" onClick={handleExtraSpaces}>Remove Extra spaces</button>\r\n   <div className=\"container my-3 \"  style={{color : props.mode==='dark'?'white':'black'}}>\r\n  <h2>Your text Summary</h2>\r\n<p>{text.split(/\\s+/).filter((element)=>{return element.length!==0}).length} words and {text.length} characters</p>\r\n<p>{0.008*text.split(\" \").filter((element)=>{return element.length!==0}).length} minutes to read</p>\r\n<h2>Preview</h2>\r\n<p>{text.length>0?text:\"Nothing to preview\"}</p>\r\n   </div>\r\n\r\n \r\n    </div>\r\n</>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\n function Alert(props) {\r\n    const capitalize=(word)=>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n  return (\r\n     <div style={{height:'50px'}}>\r\n     { props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n   <strong>{capitalize(props.alert.type)}</strong> :{props.alert.msg}\r\n  {/* <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button> */}\r\n</div>}\r\n</div>\r\n   \r\n  )\r\n}\r\nexport default Alert\r\n","// import logo from './logo.svg';\n// import { useState } from 'react';\nimport './App.css';\n// import About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport React ,{useState} from 'react';\nimport Alert from './components/Alert';\nimport About from './components/About';\n\n\n\n\n// import {\n//   BrowserRouter as Router,\n//   Route,\n//   Routes\n \n// } from \"react-router-dom\";\n\n\nfunction App() {\nconst [mode, setMode]=useState('light');\nconst [alert,setAlert]=useState(null);\n\nconst showAlert=(message,type)=>{\n    setAlert({\n      msg:message,\n      type:type\n    })\n    setTimeout(()=>{\n       setAlert(null);\n    },3000 )\n}\n\nconst removeBodyClass=()=>{\n   document.body.classList.remove('bg-light');\n   document.body.classList.remove('bg-dark');\n   document.body.classList.remove('bg-warning');\n   document.body.classList.remove('bg-danger');\n   document.body.classList.remove('bg-success');\n}\n\nconst toggleMode=(cls)=>{\n  console.log(cls)\n  removeBodyClass();\n  document.body.classList.add('bg-' +cls)\n  if(mode==='light'){\n    setMode('dark');\n    document.body.style.backgroundColor='#0f056b';\n    showAlert(\"Dark mode has been enabled\" ,\"success\")\n  }\n  else{\n    setMode('light');\n    document.body.style.backgroundColor='white';\n    showAlert(\"Light mode has been enabled\" ,\"success\")\n\n\n  }\n}\n  \n  return (\n  \n  \n <>\n\n \n{/* <Router> */}\n<Navbar title=\"textutils\" aboutText=\"About\" mode={mode} toggleMode={toggleMode}/>\n<Alert alert={alert}/ >\n<div className=\"container my-3\">\n         \n\n{/* <Routes> */}\n          {/* <Route exact path=\"/\">\n             <TextForm showAlert={showAlert} heading=\"Try TextUtils- word counter, character counter,Remove extra spaces\" mode={mode}/>\n             \n          </Route>\n          <Route exact path=\"/about\">\n            <About mode={mode} />\n          </Route> */}\n          <TextForm showAlert={showAlert} heading=\"Try TextUtils- word counter, character counter,Remove extra spaces\" mode={mode}/>\n          {/* <Route path=\"/\" element={<TextForm showAlert={showAlert} heading= \"Try TextUtils- word counter, character counter,Remove extra spaces \"mode={mode}></TextForm>} />\n        <Route path=\"/about\" element={<About mode={mode} />} /> */}\n          {/* </Routes>   */}\n         \n</div>\n{/* </Router> */}\n </>\n   );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}